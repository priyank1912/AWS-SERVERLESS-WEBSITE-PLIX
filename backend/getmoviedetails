import { DynamoDBClient, GetItemCommand } from "@aws-sdk/client-dynamodb";

const dynamoDB = new DynamoDBClient({ region: process.env.AWS_REGION });
const TABLE_NAME = process.env.DYNAMODB_TABLE_NAME;

export const handler = async (event) => {
    try {
        // Retrieve the movieId from the event's path parameters
        const movieId = event.pathParameters?.id;

        if (!movieId) {
            return {
                statusCode: 400,
                body: JSON.stringify({ message: "movieId is required in the path parameters." })
            };
        }

        // Set up DynamoDB parameters
        const params = {
            TableName: TABLE_NAME,
            Key: {
                movieId: { S: movieId }
            }
        };

        // Fetch the movie item from DynamoDB
        const data = await dynamoDB.send(new GetItemCommand(params));

        if (!data.Item) {
            return {
                statusCode: 404,
                body: JSON.stringify({ message: "Movie not found." })
            };
        }

        // Format the response to include movie details
        const movieDetails = {
            movieId: data.Item.movieId.S,
            movieName: data.Item.MovieName?.S,
            genre: data.Item.Genre?.S,
            movieUrl: data.Item.MovieUrl?.S,
            posterUrl: data.Item.PosterUrl?.S,
            trailerUrl: data.Item.TrailerUrl?.S,
            description: data.Item.Description?.S
        };

        return {
            statusCode: 200,
            body: JSON.stringify({ success: true, content: movieDetails })
        };
    } catch (error) {
        console.error("Error fetching movie details:", error);
        return {
            statusCode: 500,
            body: JSON.stringify({ message: "Internal Server Error" })
        };
    }
};
