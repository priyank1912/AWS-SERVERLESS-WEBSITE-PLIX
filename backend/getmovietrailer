import { DynamoDBClient, GetItemCommand } from "@aws-sdk/client-dynamodb";

const dynamoDB = new DynamoDBClient({ region: process.env.AWS_REGION });
const TABLE_NAME = process.env.DYNAMODB_TABLE_NAME;

export const handler = async (event) => {
    try {
        
        const movieId = event.pathParameters?.id;
        console.log(movieId);

        if (!movieId) {
            return {
                statusCode: 400,
                body: JSON.stringify({ message: "movieId is required in the path parameters." })
            };
        }

        const params = {
            TableName: TABLE_NAME,
            Key: {
                movieId: { S: movieId }
            }
        };

        const data = await dynamoDB.send(new GetItemCommand(params));

        if (!data.Item || !data.Item.TrailerUrl) {
            return {
                statusCode: 404,
                body: JSON.stringify({ message: "Trailer not found for the specified movie." })
            };
        }

        const trailerDetails = {
            movieId: data.Item.movieId.S,
            trailerUrl: data.Item.TrailerUrl.S
        };

        return {
            statusCode: 200,
            body: JSON.stringify({ success: true, content: trailerDetails })
        };
    } catch (error) {
        console.error("Error fetching movie trailers:", error);
        return {
            statusCode: 500,
            body: JSON.stringify({ message: "Internal Server Error" })
        };
    }
};
